"Prelude" ns
(S type exptected)
[ swap type? = assert ] is assert-type

[ "!String" assert-type ] is assert-string
[ "!Int"    assert-type ] is assert-int
[ "!Float"  assert-type ] is assert-float
[ "!Quote"  assert-type ] is assert-quote

[print "\n" print] is say
[string-length] is len?

[1 negate] is true
[0] is false
[swap not swap when] is unless

[dup assert-quote over assert-quote ( assertions )
>t               ( save "function" )
dup ql           ( get quote length )
>t               ( and save it for `times` )
reverse unquote  ( fill stack with values )
<t <t swap times ( get length, function swap em and do `len` times ) ]
is
each

[over over] is 2dup
[drop drop] is 2drop
[rot >t rot <t] is 2swap
[>t >t 2dup <t -rot <t -rot] is 2over

( Could add assertion here, but is it necessary? )
[ 2dup div -rot mod ] is /mod
[ 2 / ] is 2/

( from to -- [from .. to] )
[ over - 1 + >t 0 quote swap [ dup >t q< <t 1 + ] <t times drop ]
is range

( n m M - number, min {ge}, Max {lt} )
[ rot dup -rot ( m n M n  ) swap ( n M )< -rot swap ( n m )>= and [true] [false] if  ]
is within

"Main" ns
